name: build pure black version

on:
  schedule:
    - cron: "0 0 * * *"  ## Run everyday at midnight to check for any updates
  push:
   branches:
    - Pure-Black-Version
permissions:
  contents: write  ## To fetch code (actions/checkout) then releases/upload

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Fetch latest release information - remote repository  ## Get the latest tag and check if it has the proper naming pattern
        id: get_latest_release
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/johanw666/Signal-Android/releases/latest | jq -r '.tag_name')
          if [[ ! "$LATEST_TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+-JW$ ]]; then
          exit 1
          else
          echo "::set-output name=latest_tag::$LATEST_TAG"  
          fi

      - name: Checkout code 
        uses: actions/checkout@v2
        with:
          repository: johanw666/Signal-Android
          ref: "refs/tags/${{ steps.get_latest_release.outputs.latest_tag }}"
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
        
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
        
      - name: Change version   ##  Add -AMOLED_Dark to the version if it's not already there
        run: |
          if ! grep -q 'def canonicalVersionName = ".*-AMOLED_Dark"' app/build.gradle; then
            sed -i.bak 's/\(def canonicalVersionName = ".*\)"/\1-AMOLED_Dark"/' app/build.gradle
          fi
        
      - name: Display changed version   ##  Display the new version to see if everything went fine
        run: awk '/def canonicalVersionName = /' app/build.gradle
        
      - name: Change colors  ## Replace the old gray color with pure black
        run: |
          sed -i '{
            s/\(<color name="signal_dark_colorSurface">#\)[0-9a-fA-F]\{6\}/\1000000/g
            s/\(<color name="signal_dark_colorSurfaceVariant">#\)[0-9a-fA-F]\{6\}/\1303033/g
            s/\(<color name="signal_dark_colorBackground">#\)[0-9a-fA-F]\{6\}/\1000000/g
            s/\(<color name="signal_dark_colorSurface1">#\)[0-9a-fA-F]\{6\}/\1000000/g
            s/\(<color name="signal_dark_colorSurface2">#\)[0-9a-fA-F]\{6\}/\1000000/g
            s/\(<color name="signal_dark_colorSurface3">#\)[0-9a-fA-F]\{6\}/\1000000/g
            s/\(<color name="signal_dark_colorSurface4">#\)[0-9a-fA-F]\{6\}/\1000000/g
            s/\(<color name="signal_dark_colorSurface5">#\)[0-9a-fA-F]\{6\}/\1000000/g
            s/\(<color name="signal_dark_colorBackground_92">#\)[0-9a-fA-F]\{8\}/\1FF000000/g
            s/\(<color name="signal_dark_colorSurface_87">#\)[0-9a-fA-F]\{8\}/\1FF000000/g
            s/\(<color name="signal_dark_colorSurfaceVariant_92">#\)[0-9a-fA-F]\{8\}/\1FF000000/g
          }' app/src/main/res/values/material3_colors_dark.xml
        
      - name: Display changed colors   ##  Display the changes to see if everything went fine
        run: |
          grep -E "<color name=\"signal_dark_color(Background|Surface|SurfaceVariant)_?[0-9]{0,2}\">#(1)?([0-9a-fA-F]{6}|[0-9a-fA-F]{8})</color>" app/src/main/res/values/material3_colors_dark.xml
        
      - name: Build with Gradle   ##  Build the APK files
        run: ./gradlew assemblePlayProdRelease --parallel
        
      - name: Sign APKs
        ##  If you want to generate a keystore secret, run these commands:
        ##  keytool -genkey -v -keystore apksign.keystore -alias apksign -keyalg RSA -keysize 4096
        ##  cat apksign.keystore | base64
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
        run: |
          echo "${KEYSTORE_BASE64}" | base64 -d > apksign.keystore
          for apk in app/build/outputs/apk/playProd/release/*-unsigned-*.apk; do
            out=${apk/-unsigned-/-signed-}
            ${ANDROID_HOME}/build-tools/30.0.2/apksigner sign --ks apksign.keystore --ks-pass env:KEYSTORE_PASS --out "${out}" "${apk}"
            echo "$(sha256sum ${out})"
          done
          rm apksign.keystore
        
      - name: Create Release   ##  Will be named and tagged with the latest tag we got in the beginning plus adding my suffix -JB
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GAT }}
        with:
          tag_name: "${{ steps.get_latest_release.outputs.latest_tag }}-AMOLED_Dark"
          release_name: "Signal ${{ steps.get_latest_release.outputs.latest_tag }}-AMOLED_Dark"
          draft: false
          prerelease: false
        
      - name: Get Universal APK Filename   ##  To specify the name when uploading the Universal build
        id: get-universal-apk-filename
        run: echo "::set-output name=FILENAME::$(basename $(ls -1 app/build/outputs/apk/playProd/release/*-universal-*-signed-*.apk))"
        
      - name: Upload Universal APK   ##  Publish only Universal Build because it will work on all devices and to make it easier for people who do not know which one should they choose
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "app/build/outputs/apk/playProd/release/${{ steps.get-universal-apk-filename.outputs.FILENAME }}"
          asset_name: ${{ steps.get-universal-apk-filename.outputs.FILENAME }}
          asset_content_type: application/vnd.android.package-archive
        
      - name: Archive reports for failed build
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: '*/build/reports'
